<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cbxjl.hotel.manager.mapper.CheckInRecordMapper">
  <resultMap id="BaseResultMap" type="com.cbxjl.hotel.manager.core.entity.CheckInRecord">
    <!--@mbg.generated-->
    <!--@Table check_in_record-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="guest_ids" jdbcType="VARCHAR" property="guestIds" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="check_in_time" jdbcType="TIMESTAMP" property="checkInTime" />
    <result column="check_out_time" jdbcType="TIMESTAMP" property="checkOutTime" />
    <result column="check_out_real_time" jdbcType="TIMESTAMP" property="checkOutRealTime" />
    <result column="pay" jdbcType="DECIMAL" property="pay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, guest_ids, room_number, check_in_time, check_out_time, check_out_real_time, pay, 
    create_time, update_time, create_by, update_by
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update check_in_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="guest_ids = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.guestIds,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="room_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.roomNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="check_in_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.checkInTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="check_out_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.checkOutTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="check_out_real_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.checkOutRealTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="pay = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.pay,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into check_in_record
    (id, guest_ids, room_number, check_in_time, check_out_time, check_out_real_time, 
      pay, create_time, update_time, create_by, update_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.guestIds,jdbcType=VARCHAR}, #{item.roomNumber,jdbcType=VARCHAR}, 
        #{item.checkInTime,jdbcType=TIMESTAMP}, #{item.checkOutTime,jdbcType=TIMESTAMP}, 
        #{item.checkOutRealTime,jdbcType=TIMESTAMP}, #{item.pay,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, #{item.updateBy,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>

  <select id="listPage" resultType="com.cbxjl.hotel.manager.core.dos.CheckInRecordDO">
      SELECT r.number                as roomNumber,
             cir.check_in_time       as checkInTime,
             cir.check_out_time       as checkOutTIme,
             cir.check_out_real_time as checkOutRealTime,
             cir.guest_ids           as guestIds,
             cir.pay                 as pay
      FROM room r
               JOIN check_in_record cir
                    ON r.number = cir.room_number
      <where>
        <if test="param2.roomNumber != null and param2.roomNumber != '' ">
           and r.number LIKE CONCAT('%', #{param2.roomNumber}, '%')
        </if>
        <if test="param2.roomType != null">
            and r.type = #{param2.roomType}
        </if>
        <if test="param2.status != null and param2.status == 0">
            and cir.check_out_time &lt;= NOW()
            and cir.check_out_real_time IS NULL
        </if>
        <if test="param2.status != null and param2.status == 1">
            and cir.check_out_time &gt;= NOW()
        </if>
        <if test="param2.status != null and param2.status == 2">
            and cir.check_out_real_time IS NOT NULL
        </if>
        <if test="param2.checkInTimeStart != null">
            and cir.check_in_time &gt;= #{param2.checkInTimeStart}
        </if>
        <if test="param2.checkInTimeEnd != null">
            and cir.check_in_time &lt;= #{param2.checkInTimeEnd}
        </if>
      </where>
    order by cir.create_time DESC
  </select>
</mapper>